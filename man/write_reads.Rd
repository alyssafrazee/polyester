% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/write_reads.R
\name{write_reads}
\alias{write_reads}
\title{write sequencing reads to disk}
\usage{
write_reads(reads, fname, readlen, paired = TRUE, gzip, offset = 1L)
}
\arguments{
\item{reads}{DNAStringSet representing sequencing reads}

\item{fname}{file path/prefix specifying where sequencing reads should be
written. Should not contain ".fasta" (this is appended automatically).}

\item{readlen}{maximum length of the reads in \code{reads}.}

\item{paired}{If \code{TRUE}, reads are assumed to be in pairs: i.e., read 1
and read 2 in \code{reads} are the left and right mate (respectively) of a
read pair; same with read 3 and read 4, etc. The odd-numbered reads are
written to \code{fname_1.fasta} and the even-numbered
reads are written to \code{fname_2.fasta}. If \code{FALSE}, reads are
assumed to be single-end and just one file, \code{fname.fasta}, is written.}

\item{gzip}{If \code{TRUE}, gzip the output fasta files.}

\item{offset}{An integer number greater or equal to 1 to start assigning
read numbers at.}
}
\value{
No return, but FASTA file(s) containing the sequences in \code{reads}
  are written to \code{fname.fasta} (if \code{paired} is FALSE) or
  \code{fname_1.fasta} and \code{fname_2.fasta} if \code{paired} is TRUE.
}
\description{
given a DNAStringSet representing simulated sequencing reads, write FASTA
  files to disk representing the simulated reads.
}
\details{
The \code{\link{get_reads}} function returns a DNAStringSet object
  representing sequencing reads that can be directly passed to
  \code{write_reads}. If output other than that from \code{get_reads} is used
  and \code{paired} is \code{TRUE}, make sure \code{reads} is ordered
  properly (i.e., that mate pairs appear together and that the left mate
  appears first).
}
\examples{
  library(Biostrings)
  data(srPhiX174) # pretend srPhiX174 represents a DNAStringSet of *reads*
  readlen = unique(width(srPhiX174)) #35
  write_reads(srPhiX174, fname='./srPhiX174', readlen=readlen, paired=FALSE,
      gzip=FALSE)

## If the file is too big, you can subset it and write it in chunks.
## Here we split our 'reads' into two chunks and save them to the same file.
write_reads(srPhiX174[1:100], fname='./srPhiX174-offset', readlen=readlen,
   paired=FALSE, gzip=FALSE, offset = 1L)
write_reads(srPhiX174[101:length(srPhiX174)], fname='./srPhiX174-offset',
   readlen=readlen, paired=FALSE, gzip=FALSE, offset = 101L)

## We can verify that we get the same results
srPhi <- readDNAStringSet('./srPhiX174.fasta')
srPhiOffset <- readDNAStringSet('./srPhiX174-offset.fasta')
identical(srPhi, srPhiOffset)

}
\seealso{
\code{\link{get_reads}}
}
